@using ViewModels
@model PersonViewModel
@{
    Layout = "~/Views/Shared/_RazvanLivadariuAppLayout.cshtml";
}

    <div class="w-50 m-auto">
        <div class="form-group">
            <label>Person Name</label>
            <input value="@Model.FullName" class="form-control text-muted" disabled />
        </div>
        <div class="form-group">
            <label>Email</label>
            <input value="@Model.Email" class="form-control text-muted" disabled />
        </div>
        <div class="form-group">
            <label>Age</label>
            <input type="number" value="@Model.Age" class="form-control text-muted" disabled />
        </div>
        <div class="form-group">
            <label>InfectedWithCovid</label>
            <input type="text" value="@Model.InfectedWithCovid" class="form-control text-muted" disabled />
        </div>
        <div class="form-group">
            <label>Recovery</label>
            <input type="text" value="@Model.Recovery" class="form-control text-muted" disabled />
        </div>
        <div class="form-group">
            <label>City</label>
            <input value="@Model.CityName" class="form-control text-muted" disabled />
        </div>
        <div class="form-group">
            @if (Model.BloodTypes.Any())
            {
                <label class="font-weight-bold">Person bloodTypes:</label>
                <ul class="list-group">
                    @foreach (BloodTypeViewModel bloodType in Model.BloodTypes)
                    {
                        <li class="list-group-item">@bloodType.Name</li>
                    }
                </ul>
            }
            else
            {
                <p class="font-weight-bold">Person has no registered Blood types</p>
            }
        </div>

        <a href="@Url.Action("PersonsList", "Persons")" class="btn btn-info">Back</a>
    </div>
